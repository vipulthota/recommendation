# Generated by Django 4.2.6 on 2023-10-11 17:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=255, verbose_name='Link')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('price', models.IntegerField(verbose_name='Price (In Rs)')),
                ('type', models.IntegerField(verbose_name='Type')),
                ('dedicated', models.IntegerField(verbose_name='Dedicated Graphic Memory Capacity')),
                ('processor', models.IntegerField(verbose_name='Processor Brand')),
                ('ssd', models.IntegerField(verbose_name='SSD')),
                ('ram_gb', models.IntegerField(verbose_name='RAM (in GB)')),
                ('ram_type', models.CharField(max_length=255, verbose_name='RAM Type')),
                ('expand', models.IntegerField(verbose_name='Expandable Memory')),
                ('os', models.IntegerField(verbose_name='Operating System')),
                ('ts', models.IntegerField(verbose_name='Touch Screen')),
                ('screen_size', models.FloatField(verbose_name='Screen Size')),
                ('weight', models.FloatField(verbose_name='Weight (in kg)')),
                ('rr', models.IntegerField(verbose_name='Refresh Rate')),
                ('sr', models.IntegerField(verbose_name='Screen Resolution')),
                ('com', models.IntegerField(verbose_name='Company')),
                ('storage', models.IntegerField(verbose_name='Storage')),
                ('pro_name', models.CharField(max_length=255, verbose_name='Processor Name')),
                ('cpu', models.IntegerField(verbose_name='CPU Ranking')),
                ('bat_bac', models.FloatField(verbose_name='Battery Backup')),
                ('gpu_name', models.CharField(max_length=255, verbose_name='GPU Name')),
                ('gpu_bench', models.FloatField(verbose_name='GPU Benchmark')),
                ('ram_typetokenized', models.IntegerField(verbose_name='RAM Type Tokenized')),
                ('gpu_proc', models.IntegerField(verbose_name='GPU Processor Tokenized')),
            ],
        ),
    ]
